// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.GestorProyectos.Migrations
{
    [DbContext(typeof(GestorProyectosDbContext))]
    [Migration("20250530002427_AddDescripcionToRol")]
    partial class AddDescripcionToRol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.GestorProyectos.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Control total del sistema: gestión de usuarios, roles y configuración general.",
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Responsable de crear, asignar y supervisar proyectos y tareas.",
                            Nombre = "Jefe de Proyecto"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Realiza tareas asignadas, actualiza estados y reporta avances.",
                            Nombre = "Desarrollador"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Encargado de probar funcionalidades, reportar errores y validar entregables.",
                            Nombre = "Tester/QA"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Usuario externo con permisos limitados para ver avances y reportes.",
                            Nombre = "Cliente"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Acceso muy limitado o solo lectura a ciertas partes del sistema.",
                            Nombre = "Invitado"
                        });
                });

            modelBuilder.Entity("Backend.GestorProyectos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Backend.GestorProyectos.Models.Usuario", b =>
                {
                    b.HasOne("Backend.GestorProyectos.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Backend.GestorProyectos.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
